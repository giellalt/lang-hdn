!!!Free and Open source Northern haida analyser gtsvn-hdn

;Authors: Divvun and Giellatekno teams, U Alberta, community members
;Software version: 2012
;Documentation license: GNU GFDL
;SVN Revision: $Revision: 68217 $
;SVN Date: $Date: 2013-01-16 11:31:33 +0200 (Wed, 16 Jan 2013) $

!!!GTSVN-hdn

This is free and open source Northern Haida morphology.


This file shows the Haida multichar symbols and initial lexica.

 !!!Multichar_Symbols definitions

!!Analysis symbols
----------------
The morphological analyses of wordforms of Northern Haida are presented
in this system in terms of following symbols.

(It is highly suggested to follow existing standards when adding new tags).


Haida has these tags for real, says Jordan.
 * +V	     = 
 * +Basic   = 
 * +Prs     = 
 * +Hab     = 
 * +Neg     = 
 * +DPast   = 
 * +PHab    = 
 * +SFut    = 
 * +IFut    = 
 * +NFut    = 
 * +3Pl     = 
 * +YesNo   = 
 * +Cmd     = 
 * +Qst     = 
 * +PlCmd   = 
 * +IncCmd  = 
 * +Evid    = 

The parts-of-speech could perhaps also be (remove irrelevant):

 * +N	     =
 * +A	     =
 * +Adv     =
 * +Pron    =
 * +CS	     =
 * +CC	     =
 * +Adp     =
 * +Po	     =
 * +Pr	     =
 * +Interj  =
 * +Pcle    =
 * +Num     =

 * +Def   =
 * +Indef  =

The parts of speech are further split up into:

 * +Prop    =
 * +Pers    =
 * +Dem     =
 * +Interr  =
 * +Refl    =
 * +Recipr  =
 * +Rel     =
 * +Indef   =

The Usage extents are marked using the following tags:
 *  +Use/Sub      = Substandard forms
 *  +Use/-Spell   = Not included in speller

The nominals are inflected in the following Number




 * +ABBR  = Abbreviations
 * +ACR   = Acronyms


Special symbols are classified with:
 * +CLB    = Clause boundary symbols
 * +PUNCT  = Other punctuation marks
 * +LEFT   = Left part of paired symbols
 * +RIGHT  = Right part of paired symbols

The verbs are syntactically split according to transitivity:
 * +TV  
 * +IV  

Special multiword units are analysed with:
 *  +Multi  

Non-dictionary words can be recognised with:
 *  +Guess  



The word forms in Haida start from the lexeme roots of basic
word classes, or optionally from prefixes:


