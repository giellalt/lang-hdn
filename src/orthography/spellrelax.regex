#' l (->) l l ,
#' m (->) m m ,
#' n (->) n n ,
ç (->) r ,
Í (->) Í , # composed apostrophe
Á (->) Á ,	# composed apostrophe
Ú (->) Ú ,	# composed apostrophe
í (->) í ,	# composed apostrophe
á (->) á ,	# composed apostrophe
ú (->) ú ,	# composed apostrophe
Í (->) I , # no apostrophe
Á (->) A , # no apostrophe
Ú (->) U , # no apostrophe
í (->) i , # no apostrophe
á (->) a , # no apostrophe
ú (->) u , # no apostrophe
' (->) q , # apostroph
' (->) ’ , # right single quot
' (->) ʼ , # letter apostroph
k̲ (->) ñ , # no line below, or fontstyle underline
g̲ (->) ç , # no line below, or fontstyle underline
x̲ (->) ý , # no line below, or fontstyle underline
k̲ (->) k , # no line below, or fontstyle underline
g̲ (->) g , # no line below, or fontstyle underline
x̲ (->) x , # no line below, or fontstyle underline
k̲ (->) ḵ , # 0331 macron below
g̲ (->) g̱ , # 0331 macron below
x̲ (->) x̱ , # 0331 macron below
k̲ (->) ḵ , # 1E35 small letter k with line below

ä (->) a ,
ï (->) i
;

# Explanation:
# lexical side (->) input 

# Future thought:
# A posible change is to split this file into lg-specific files.
# As the number of language grow, this might be more relevant.
# Especially conflicting rules a -> b, b -> a in different lgs
# might force a split of this file.

# Note:
# Some of the lines above seem to contain identical letters, 
# and in some cases the same right-hand letter seems to occure twice.
# In each case, the __second__ of these is a non-precomposed letter.
# In order to check which one is which one, open this file in emacs
# and read through the line with the arrow key. The letters who span over
# two characters (press arrow twice) are the precomposed ones.

# Note that the ï/Ï letters are there for sma.
# They are probably substandard, and should be relegated to sma.fst
# but removed from a sma.norm.fst.
